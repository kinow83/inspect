_match()
{
	local list=($1)
	local opts=$2

	for (( k=0; k<COMP_CWORD; k++ )); do
		if [[ "${list[k]}" == "${COMP_WORDS[k+1]}" ]]; then
			for (( i=0; i<${#list[@]} && k<COMP_CWORD; i++, k++ )); do
				if [[ "${list[i]}" != "${COMP_WORDS[k+1]}" ]]; then
					break
				fi
			done

			if [[ $i == ${#list[@]} ]] && [[ `expr $k + 1` == $COMP_CWORD ]] ; then
				cur="${COMP_WORDS[COMP_CWORD]}"
				COMPREPLY=($(compgen -W "${opts}" -- ${cur}))
				return 1
			fi
		fi
	done

	return 0
}

_inspect()
{
    local cur prev opts ret=0

	COMPREPLY=()

	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[COMP_CWORD-1]}"
	opts="-r -o -p -m -v -h"

	rtx_wifi_capture_opts="-r wifi_capture"
	rtx_wiri_shooter_opts="-r wifi_capture"
	output_xml_opts="-o xml"
	parser_xml_opts="-p xml"
	match_wifi_opts="-m wifi"


	_match "-r" "wifi_capture wifi_shooter"
	if [[ $? -eq 1 ]]; then
		return 0
	fi

	_match "-r wifi_capture" "dev=mon0;thread=no"
	if [[ $? -eq 1 ]]; then
		return 0
	fi

	_match "-r wifi_shooter" "dev=mon0;thread=no"
	if [[ $? -eq 1 ]]; then
		return 0
	fi

	COMPREPLY=($(compgen -W "${opts}" -- ${cur}))

	return 0

}
complete -F _inspect inspect
